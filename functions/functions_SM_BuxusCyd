setwd("C:/Users/quim.canelles/OneDrive - ctfc.cat/Cydalima Model Simulació/Simulation Model")

#Funcions pel model BoixCydFoc
#1. cyd.spread.fn
#2. pest.fn
#3. foc.spread.fn
#4. foc.fn
#5. regenera.fn

#Llibreria
library(raster)
library(dplyr)
library(openxlsx)
library(rlang)
library(SpaDES)
library(dismo)




######################################################################################
### 1. FUNCIO Regeneració
######################################################################################


#FUNCIO
regenera.fn <- function(Habitat.df,FixIn.df.y,SDM.boix.min_reg,dist.boix.max,LocCydHistoric.df,LocFocHistoric.df){
  
  #Llibreries
  library(raster)
  library(dplyr)
  
  #Carregar BoixHistoric
  BoixHistoric<-Habitat.df$Hab2019 #En algun moment hi va haver boix allà. Podem posar un limit de X anys
  #Seleccionar últim habitat
  Habitat <- as.data.frame(Habitat.df[,c(1:3,ncol(Habitat.df))])
  colnames(Habitat)[4]<-"hab_original"
  
  #Mirar veinatge
  #*finalment no fem vainatge!!!! El boix regenra però no té gran dispersió.
  #*si es volgués incloure: Habitat.op$DistanciaBoix<=dist.boix.max
  ##Seleccionar plots que ara són Bosc pero antigament eren boix
  a<-filter(cbind(Habitat,BoixHistoric),hab_original==2,BoixHistoric==1)
  ##Seleccionar plots que actualment són boix
  HabBoix_t<-filter(Habitat,hab_original==1)
  ##Calcul de distancies
  dst<-as.data.frame(pointDistance(a[,c(2,3)],HabBoix_t[,c(2,3)],lonlat=F,allpairs=T))
  ##Distancia mínima + coordenades
  dst2<-cbind(a[,c(1,2,3)],do.call(pmin, dst))
  colnames(dst2)[4]<-"DistanciaBoix"
  ##Crear Habitat_dist
  Habitat.dist<-left_join(Habitat.df,dst2[,c(1,4)],by="cells")
  Habitat.dist$DistanciaBoix[is.na(Habitat.dist$DistanciaBoix)] <- 100000
  
  #Habitat actual
  Habitat.op<-cbind(Habitat,BoixHistoric,Habitat.dist$DistanciaBoix,FixIn.df.y[,c(4)],LocCydHistoric.df[,c(4)],LocFocHistoric.df[,c(4)])
  colnames(Habitat.op)<-c("cells","x","y","hab_original","BoixHistoric","DistanciaBoix","SDMBoix","LocCydHistoric","LocFocHistoric")
  Habitat.op$hab_new<-ifelse(Habitat.op$hab_original==2 & Habitat.op$BoixHistoric==1 & Habitat.op$SDMBoix>=SDM.boix.min_reg & Habitat.op$LocCydHistoric==0 & Habitat.op$LocFocHistoric==0,
                             1,Habitat.op$hab_original)
  Habitat.op$reg_boix<-ifelse(Habitat.op$hab_original==2 & Habitat.op$BoixHistoric==1 & Habitat.op$SDMBoix>=SDM.boix.min_reg & Habitat.op$LocCydHistoric==0 & Habitat.op$LocFocHistoric==0,
                             1,0)
  
  #Plot
  #plot(rasterFromXYZ(Habitat.op[,c(2,3,10)]))
  
  #Assign
  Habitat_actual<-Habitat.op[,c(1:3,10)]
  assign("Habitat_yr_reg", Habitat_actual, envir = .GlobalEnv)
  Reg_boix<-Habitat.op[,c(1:3,11)]
  assign("Reg_boix_anual", Reg_boix, envir = .GlobalEnv)
  
}

#Guardar la funció
dump("regenera.fn", file="funcions/Regenera_fn.R")

#Prova
##Elements de la funció
Habitat.df<-read.delim("inputfiles/Habitat_df.txt",sep=" ")
FixIn.df<-read.delim("inputfiles/FixIn_df.txt",sep=" ")
FixIn.df.y<-FixIn.df[,c(1:4,9,14)]
LocCyd.df<-read.delim("inputfiles/LocCyd_df.txt",sep=" ")
LocCydHistoric.df<-LocCyd.df[1:4]
LocFoc.df<-read.delim("inputfiles/LocFoc_df.txt",sep=" ")
LocFocHistoric.df<-LocFoc.df[1:4]
dist.boix.max<-1000
SDM.boix.min_reg<-0.8

##Funció
regenera.fn(Habitat.df,FixIn.df.y,SDM.boix.min_reg,dist.boix.max,LocCydHistoric.df,LocFocHistoric.df)




######################################################################################
### 2. FUNCIO Sequera
######################################################################################


#FUNCIO
sequera.fn <- function(Habitat.df,FixIn.df,SDM.boix.min_seq,Seq.random.th){
  
  #Llibreries
  library(raster)
  library(dplyr)
  
  #Seq.op: HabitatOriginal; SDMBuxus_yr
  Seq.op<-cbind(Habitat.df[,c(1:3,ncol(Habitat.df))],FixIn.df.y[,c(4)])
  colnames(Seq.op)<-c("cells","x","y","hab_original","SDMBuxus")
  
  #Funció probabilitat
  Seq.op$random<-runif(nrow(Seq.op),0,1) #*random

  #Canvi de categoria
  Seq.op$hab_new <- ifelse(Seq.op$hab_original==1 & Seq.op$SDMBuxus<SDM.boix.min_seq & Seq.op$random<Seq.random.th, 2, Seq.op$hab_original)
  Seq.op$seq1 <- ifelse(Seq.op$hab_original==1 & Seq.op$SDMBuxus<SDM.boix.min_seq & Seq.op$random<Seq.random.th, 1, 0)
  
  #Plot
  #plot(rasterFromXYZ(Seq.op[,c(2,3,7)]), main="Habitat actual")
  
  #Assign
  Habitat_actual<-Seq.op[,c(1:3,7)]
  assign("Habitat_yr_reg_seq", Habitat_actual, envir=.GlobalEnv)
  Seq1_yr<-Seq.op[,c(1:3,8)]
  assign("Seq1_anual", Seq1_yr, envir=.GlobalEnv)
  
}

#Guardar la funció
dump("sequera.fn", file="funcions/Sequera_fn.R")

#Provar funció
##Elements de la funcio
Habitat.df<-read.delim("inputfiles/Habitat_df.txt",sep=" ")
FixIn.df<-read.delim("inputfiles/FixIn_df.txt",sep=" ")
FixIn.df.y<-FixIn.df[,c(1:4,9,14)]
SDM.boix.min_seq<-0.7
Seq.random.th<-0.4

##Funció
sequera.fn(Habitat.df,FixIn.df,SDM.boix.min_seq,Seq.random.th)


##Proves
mod<-lm( I(c(0,0.75,1)) ~ 0 + c(0,(SDM.boix.min_seq/2),SDM.boix.min_seq) + I(c(0,(SDM.boix.min_seq/2),SDM.boix.min_seq)^2))
curve(mod$coefficients[2]*x^2+mod$coefficients[1]*x)
Seq.op$prob<-(Seq.op$SDMBuxus*mod$coefficients[1])+(mod$coefficients[2]*Seq.op$SDMBuxus^2)
Seq.op$prob<-ifelse(Seq.op$SDMBuxus>=SDM.boix.min_seq,1,Seq.op$prob)
Seq.op$random<-rnorm(nrow(Seq.op), mean=0.5, sd=0.1) #*random distribució normal



######################################################################################
### 2. FUNCIO Sequera patches
######################################################################################

sequera.patch.fn <- function(Habitat.df,FixIn.df){
  library(raster)
  library(dplyr)
  library(openxlsx)
  library(rlang)
  library(SpaDES)
  library(dismo)
  
  #Probabilitat de seq
  ##SeqPatch.op: IDcell; Coord; HabitatOriginal; SDMBoix
  SeqPatch.op<-cbind(Habitat.df[,c(1:3,ncol(Habitat.df))],FixIn.df.y[,c(4)])
  colnames(SeqPatch.op)<-c("cells","x","y","hab_original","SDMBoix")
  ##Probabilitat ignició
  SeqPatch.op$ProbIgni<-ifelse(SeqPatch.op$hab_original==0, 0, (1-SeqPatch.op$SDMBoix))#!Substituir RiscSeq per SDMBoix
  
  #Mida del seq
  mida<-c(rep(1,round(runif(1,min=(dist.seq[,c(2)]-5), max=(dist.seq[,c(2)]+5)))),
          rep(5,round(runif(1,min=(dist.seq[,c(3)]-5), max=(dist.seq[,c(3)]+5)))),
          rep(10,round(runif(1,min=(dist.seq[,c(4)]-3), max=(dist.seq[,c(4)]+3)))))
  
  #Rasteritzar
  RiscSeq.r<-rasterFromXYZ(SeqPatch.op[,c(2,3,6)])
  
  #Ignició de la Sequera
  igni<-randomPoints(RiscSeq.r,n=length(mida),p=length(mida),prob=T,cellnumbers=T)
  
  #Seq
  Seq_actual.r<-spread(RiscSeq.r, loci=igni, spreadProb=RiscSeq.r, maxSize=mida, directions=8,id=T)
  values(Seq_actual.r)[values(Seq_actual.r) > 0] <- 1
  
  #plot
  #plot(Seq_actual.r)
  
  #Canvi d'habitat
  SeqPatch.op$Seq_actual.r<-extract(Seq_actual.r,SeqPatch.op[,c(2,3)])
  SeqPatch.op$hab_new <- ifelse(SeqPatch.op$Seq_actual.r==1, 2, SeqPatch.op$hab_original)
  SeqPatch.op$Seq_actual_boix<-ifelse(SeqPatch.op$hab_original==1 & SeqPatch.op$Seq_actual.r==1,1,0)
  
  #Assign
  Habitat_actual<-SeqPatch.op[,c(1:3,8)]
  assign("Habitat_yr_reg_seq_seq2", Habitat_actual, envir=.GlobalEnv)
  Seq2_yr<-SeqPatch.op[,c(1:3,7)]
  assign("Seq2_anual", Seq2_yr, envir=.GlobalEnv)
  Seq2_boix_yr<-SeqPatch.op[,c(1:3,9)]
  assign("Seq2_boix_anual", Seq2_boix_yr, envir=.GlobalEnv)
  
  
}

dump("sequera.patch.fn", file="funcions/SequeraPatch_fn.R")

#Prova
##Elements de la funció
Habitat.df<-read.delim("inputfiles/Habitat_df.txt",sep=" ")
FixIn.df<-read.delim("inputfiles/FixIn_df.txt",sep=" ")
FixIn.df.y<-FixIn.df[,c(1:4,9,14)]
###Distribució de sequera PROVA.
dist.seq.total<-read.xlsx("C:/Users/quim.canelles/OneDrive - ctfc.cat/Cydalima Model Simulació/Sequera/DistSeq_Piri.xlsx")
y<-2020
dist.seq<-subset(dist.seq.total, dist.seq.total$Year==y)

##Funció
sequera.patch.fn(Habitat.df,FixIn.df)




######################################################################################
### 3. FUNCIO Foc Spread
######################################################################################


#FUNCIO
foc.spread.fn <- function(Habitat.df,dist.foc,FixIn.df.y,LocFocHistoric.df){
  
  #Llibreries
  library(raster)
  library(dplyr)
  library(openxlsx)
  library(rlang)
  library(SpaDES)
  library(dismo)
  
  
  #Probabilitat de foc
  ##FocSpread.op: IDcell; Coord; HabitatOriginal; Probabilitat foc (en %); FocHistoric
  FocSpread.op<-cbind(Habitat.df[,c(1:3,ncol(Habitat.df))],(FixIn.df.y[,c(6)]/10),LocFocHistoric.df[,c(4)])
  colnames(FocSpread.op)<-c("cells","x","y","hab_original","RiscFoc","LocFocHistoric")
  ##Probabilitat ignició
  FocSpread.op$ProbIgni<-ifelse(FocSpread.op$hab_original==0 | FocSpread.op$LocFocHistoric>0, 0, FocSpread.op$RiscFoc)
  
  #Mida del foc
  mida<-c(rep(0,dist.foc[,c(2)]), #Si treballem amb res=100x100; 50,100,250,500,1000,10000,50000
          rep(1,dist.foc[,c(3)]),
          rep(3,dist.foc[,c(4)]),
          rep(5,dist.foc[,c(5)]),
          rep(10,dist.foc[,c(6)]),
          rep(100,dist.foc[,c(7)]),
          rep(500,dist.foc[,c(8)]))
  
  #Rasteritzar
  RiscFoc.r<-rasterFromXYZ(FocSpread.op[,c(2,3,7)])
  
  #Ignició del foc
  igni<-randomPoints(RiscFoc.r,n=sum(dist.foc[,c(2:8)]),p=sum(dist.foc[,c(2:8)]),prob=T,cellnumbers=T)
  
  #Foc
  Foc_actual.r<-spread(RiscFoc.r, loci=igni, spreadProb=RiscFoc.r, maxSize=mida, directions=8,id=T)
  values(Foc_actual.r)[values(Foc_actual.r) > 0] <- 1
  
  #plot
  #plot(Foc_actual.r)
  
  #Assign
  Foc_actual.df<-cbind(Habitat.df[,c(1:3)],extract(Foc_actual.r,Habitat.df[,c(2,3)]))
  colnames(Foc_actual.df)[4]<-"Foc_actual"
  assign("LocFoc_yr_spread", Foc_actual.df, envir = .GlobalEnv)
  
}

#Guardar la funció
dump("foc.spread.fn", file="funcions/FocSpread_fn.R")

#Prova
##Elements de la funció
Habitat.df<-read.delim("inputfiles/Habitat_df.txt",sep=" ")
FixIn.df<-read.delim("inputfiles/FixIn_df.txt",sep=" ")
FixIn.df.y<-FixIn.df[,c(1:4,13,22)]
LocFoc.df<-read.delim("inputfiles/LocFoc_df.txt",sep=" ")
LocFocHistoric.df<-LocFoc.df[1:4]
###Distribució de focs PROVA.
dist.foc<-read.xlsx("C:/Users/quim.canelles/OneDrive - ctfc.cat/Cydalima Model Simulació/Foc/DistFoc_anual_Piri_85.xlsx")
dist.foc<-subset(dist.foc, dist.foc$Year==2020)

##Funció
foc.spread.fn(Habitat.df,dist.foc,FixIn.df.y,LocFocHistoric.df)




######################################################################################
### 4. FUNCIO Foc
######################################################################################


#FUNCIO
foc.fn <- function(Habitat.df,LocFoc.df){
  
  #Llibreries
  library(raster)
  library(dplyr)
  
  #Foc.op: HabitatOriginal; Foc_yr
  Foc.op<-cbind(Habitat.df[,c(1:3,ncol(Habitat.df))],LocFoc.df[,c(4)])
  colnames(Foc.op)<-c("cells","x","y","hab_original","LocFoc")
  
  #Canvi de categoria
  Foc.op$hab_new <- ifelse(Foc.op$hab_original==1 & Foc.op$LocFoc>=1, 2, Foc.op$hab_original)
  Foc.op$Foc_boix <- ifelse(Foc.op$hab_original==1 & Foc.op$LocFoc>=1, 1, 0)
  
  #Plot
  #plot(rasterFromXYZ(Foc.op[,c(2,3,6)]), main="Habitat actual")
  
  #Assign
  Habitat_actual<-Foc.op[,c(1:3,6)]
  assign("Habitat_yr_reg_seq_seq2_foc", Habitat_actual, envir=.GlobalEnv)
  Foc_boix_yr<-Foc.op[,c(1:3,7)]
  assign("Foc_boix_anual", Foc_boix_yr, envir=.GlobalEnv)
  
}

#Guardar la funció
dump("foc.fn", file="funcions/Foc_fn.R")

#Provar funció
##Elements de la funcio
LocFoc.df<-read.delim("inputfiles/LocFoc_df.txt",sep=" ")
LocFoc.df<-LocFoc.df[1:4]
Habitat.df<-read.delim("inputfiles/Habitat_df.txt",sep=" ")

##Funció
foc.fn(Habitat.df,LocFoc.df)





######################################################################################
### 5. FUNCIO Spread Cydalima
######################################################################################

#FUNCIO
cyd.spread.fn <- function(LocCyd.df,FixIn.df.y,Habitat.df,dist.cyd.max,SDM.cyd.min_spread){
  
  #Llibreries necessaries
  library(raster)
  library(dplyr)
  
  #Calcul de distancies
  ##Seleccionar punts de boix i punts de cydalima
  HabBoix_t<-filter(Habitat.df,Habitat.df[,c(ncol(Habitat.df))]==1)
  LocCyd_t<-filter(LocCyd.df,LocCyd.df[,c(ncol(LocCyd.df))]==1)
  ##Calcul de distancies i distancia mínima
  dst<-as.data.frame(pointDistance(HabBoix_t[,c(2,3)],LocCyd_t[,c(2,3)],lonlat=F,allpairs=T))
  dst$min <- do.call(pmin, dst)
  ##Ajuntar coordenades
  if(nrow(dst)>0){dst2<-cbind(HabBoix_t[,c(1:3)],dst$min)} else {dst2<-cbind(HabBoix_t[,c(1:3)],NA)}
  colnames(dst2)[4]<-"dist"
  #Taula Cyd.dist
  Cyd.dist<-left_join(Habitat.df,dst2[,c(1,4)],by="cells")
  Cyd.dist$dist[is.na(Cyd.dist$dist)] <- 100000
  #Model probabilitat
  mod<-lm( I(c(0,0.75,1)) ~ 0 + c(0,(1/2),1) + I(c(0,(1/2),1)^2))
  
  #CydSpread.op
  CydSpread.op<-cbind(Habitat.df[,c(1:3,ncol(Habitat.df))],LocCyd.df[,c(ncol(LocCyd.df))],Cyd.dist[,c(5)],FixIn.df.y[,c(5)],
                      (mod$coefficients[1]*FixIn.df.y[,c(5)]+mod$coefficients[2]*FixIn.df.y[,c(5)]^2),rnorm(nrow(Habitat.df), mean=0.5, sd=0.1))
  colnames(CydSpread.op)<-c("cells","x","y","hab_original","LocCyd_original","Cyd.dist","SDMCyd","prob","random")                    
  
  CydSpread.op$LocCyd_actual<-ifelse( CydSpread.op$Cyd.dist<dist.cyd.max & 
                                        CydSpread.op$SDMCyd>SDM.cyd.min_spread &
                                        CydSpread.op$prob>CydSpread.op$random,1,0)
  
  #Rasteritzar punts
  #plot(rasterFromXYZ(CydSpread.op[,c(2,3,10)]),main="Cyd actual")
  #plot(rasterFromXYZ(CydSpread.op[,c(2,3,5)]),main="Cyd original")
  
  #Assign
  LocCyd_actual<-CydSpread.op[,c(1:3,10)]
  assign("LocCyd_yr_spread", LocCyd_actual, envir=.GlobalEnv)
  
}

#Guardar la funció
dump("cyd.spread.fn", file="funcions/CydSpread_fn.R")

#Provar la funció
#Elements de la funcio
Habitat.df<-read.delim("inputfiles/Habitat_df.txt",sep=" ")
FixIn.df<-read.delim("inputfiles/FixIn_df.txt",sep=" ")
FixIn.df.y<-FixIn.df[,c(1:4,9,14)]
LocCyd.df<-read.delim("inputfiles/LocCyd_df.txt",sep=" ")
dist.cyd.max<-10000
SDM.cyd.min_spread<-0.2

cyd.spread.fn(LocCyd.df,FixIn.df.y,Habitat.df,dist.cyd.max,SDM.cyd.min_spread)







######################################################################################
### 6. FUNCIO Pest
######################################################################################


#FUNCIO
pest.fn <- function(Habitat.df,FixIn.df.y,LocCyd.df,LocCydHistoric.df,SDM.cydsever.min_pest){
  
  #Llibreries
  library(raster)
  library(dplyr)
  
  #Pest.op
  Pest.op<-cbind(Habitat.df[,c(1:3,ncol(Habitat.df))],LocCydHistoric.df[,c(ncol(LocCydHistoric.df))],LocCyd.df[,c(ncol(LocCyd.df))],FixIn.df.y[,c(5)])
  colnames(Pest.op)<-c("cells","x","y","hab_original","LocCydHistoric","LocCyd_actual","SDMCyd")
  
  #Model probabilitat
  #mod<-lm( I(c(0,0.75,1)) ~ 0 + c(0,(1/2),1) + I(c(0,(1/2),1)^2))
  mod<-lm( I(c(0,0.5,1)) ~ 0 + c(0,0.75,1) + I(c(0,0.75,1)^2))
  Pest.op$prob<-(mod$coefficients[1]*Pest.op$SDMCyd + mod$coefficients[2]*Pest.op$SDMCyd^2)
  Pest.op$random<-rnorm(nrow(Habitat.df), mean=0.5, sd=0.1)
  
  #Canvi de categoria
  Pest.op$hab_new <- ifelse(Pest.op$hab_original==1 & Pest.op$LocCydHistoric>=1 & Pest.op$SDMCyd>=SDM.cydsever.min_pest &  Pest.op$random>0.6,2,Pest.op$hab_original)
  Pest.op$Cyd_sev <- ifelse(Pest.op$hab_original==1 & Pest.op$LocCydHistoric>=1 & Pest.op$SDMCyd>=SDM.cydsever.min_pest &  Pest.op$random>0.6,1,0)                          

  #Plot
  #plot(rasterFromXYZ(Pest.op[,c(2,3,8)]), main="Habitat actual")
  
  #Assign
  Habitat_actual<-Pest.op[,c(1:3,10)]
  assign("Habitat_yr_reg_seq_seq2_foc_cyd", Habitat_actual, envir=.GlobalEnv)
  
  Cyd_sev<-Pest.op[,c(1:3,11)]
  assign("Cyd_sev", Cyd_sev, envir=.GlobalEnv)
  
}


#Guardar la funció
dump("pest.fn", file="funcions/Pest_fn.R")


#Provar funció
##Elements de la funcio
Habitat.df<-read.delim("inputfiles/Habitat_df.txt",sep=" ")
FixIn.df<-read.delim("inputfiles/FixIn_df.txt",sep=" ")
FixIn.df.y<-FixIn.df[,c(1:4,9,14)]
LocCyd.df<-read.delim("inputfiles/LocCyd_df.txt",sep=" ")
LocCydHistoric.df<-LocCyd.df[1:4]
SDM.cydsever.min_pest<-0.60

##Funció
pest.fn(Habitat.df,FixIn.df.y,LocCyd.df,LocCydHistoric.df,SDM.cydsever.min_pest)





#####################################################################################
### 7. FUNCIO Int.Pest.Seq
######################################################################################


#FUNCIO
int.pest.seq.fn <- function(Habitat.df,FixIn.df.y,LocCyd.df,SDM.boix.min_pest,SDM.cydsever.min_pest){
  
  #Llibreries
  library(raster)
  library(dplyr)
  
  #Pest.op
  Pest.op<-cbind(Habitat.df[,c(1:3,ncol(Habitat.df))],LocCyd.df[,c(ncol(LocCyd.df))],FixIn.df.y[,c(4)],FixIn.df.y[,c(5)])
  colnames(Pest.op)<-c("cells","x","y","hab_original","LocCyd_actual","SDMBuxus","SDMCyd")
  
  #Canvi de categoria
  Pest.op$hab_new <- ifelse(Pest.op$hab_original==1 & Pest.op$LocCyd_actual>=1 & Pest.op$SDMBuxus<SDM.boix.min_pest & Pest.op$SDMCyd>SDM.cydsever.min_pest, 2, Pest.op$hab_original)
  Pest.op$IntPestSeq <- ifelse(Pest.op$hab_original==1 & Pest.op$hab_new==2,1,0)
  
  #Plot
  #plot(rasterFromXYZ(Pest.op[,c(2,3,8)]), main="Habitat actual")
  
  #Assign
  Habitat_actual<-Pest.op[,c(1:3,8)]
  assign("Habitat_yr_reg_seq_seq2_foc_cyd_int1", Habitat_actual, envir=.GlobalEnv)
  IntPestSeq_yr<-Pest.op[,c(1:3,9)]
  assign("IntPestSeq_anual", IntPestSeq_yr, envir=.GlobalEnv)
  
}


#Guardar la funció
dump("int.pest.seq.fn", file="funcions/IntPestSeq_fn.R")


#Provar funció
##Elements de la funcio
Habitat.df<-read.delim("inputfiles/Habitat_df.txt",sep=" ")
FixIn.df<-read.delim("inputfiles/FixIn_df.txt",sep=" ")
FixIn.df.y<-FixIn.df[,c(1:4,9,14)]
LocCyd.df<-read.delim("inputfiles/LocCyd_df.txt",sep=" ")
SDM.boix.min_pest<-0.4
SDM.cydsever.min_pest<-0.75

##Funció
int.pest.seq.fn(Habitat.df,FixIn.df.y,LocCyd.df,SDM.boix.min_pest,SDM.cydsever.min_pest)

